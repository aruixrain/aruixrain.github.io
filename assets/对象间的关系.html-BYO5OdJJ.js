import{_ as a}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as o,o as n}from"./app-7V2lPg4G.js";const r={};function p(i,e){return n(),t("div",null,e[0]||(e[0]=[o('<h1 id="對象閒的關係" tabindex="-1"><a class="header-anchor" href="#對象閒的關係"><span>對象閒的關係</span></a></h1><p>1 综述 在Java中对象与对象的关系总体分为四类，分别是：依赖、关联、聚合和组合。</p><p>（1）依赖(Dependency)关系是类与类之间的联接。依赖关系表示一个类依赖于另一个类的定义，一般而言，依赖关系在Java语言中体现为局域变量、方法的形参，或者对静态方法的调用。 （2）关联(Association）关系是类与类之间的联接，它使一个类知道另一个类的属性和方法。关联可以是双向的，也可以是单向的。在Java语言中，关联关系一般使用成员变量来实现 （3）聚合(Aggregation) 关系是关联关系的一种，是强的关联关系。聚合是整体和个体之间的关系 （4）组合(Composition) 关系是关联关系的一种，是比聚合关系强的关系。它要求普通的聚合关系中代表整体的对象负责代表部分对象的生命周期，组合关系是不能共享的</p><h4 id="依赖" tabindex="-1"><a class="header-anchor" href="#依赖"><span>依赖：</span></a></h4><p>个类A使用到了另一个类B，<strong>而这种使用关系是具有偶然性的、临时性的、非常弱的，但是B类的变化会影响到A</strong></p><h4 id="关联" tabindex="-1"><a class="header-anchor" href="#关联"><span>关联：</span></a></h4><p>关联是一种“拥有”的关系。表现在代码上，就是一个类包含另一个类的实例，通常表现为被关联类以类属性的形式出现在关联类的类定义中，也可以表现为关联类引用了一个类型为被关联类的全局变量。关联可以使单向的，也可以使双向的。<strong>依赖和关联的区别在于依赖是使用，关联是拥有</strong>.</p><h4 id="聚合" tabindex="-1"><a class="header-anchor" href="#聚合"><span>聚合</span></a></h4><p>聚合是关联关系的一种，它是一种强关联关系（has-a）;聚合关系是整体和个体/部分之间的关系;关联关系的两个类处于同一个层次上,而聚合关系的两个类处于不同的层次上,一个是整体,一个是个体/部分;在聚合关系中,代表个体/部分的对象有可能会被多个代表整体的对象所共享;表现在代码层面上就是在构造器初始化时将两个类关联起来</p><h4 id="组合" tabindex="-1"><a class="header-anchor" href="#组合"><span>组合</span></a></h4><p>组合也是关联关系的一种（is-a）,但它是比聚合关系更强的关系.组合关系要求聚合关系中代表整体的对象要负责代表个体/部分的对象的整个生命周期;组合关系不能共享;在组合关系中,如果代表整体的对象被销毁或破坏,那么代表个体/部分的对象也一定会被销毁或破坏,而聚在合关系中,代表个体/部分的对象则有可能被多个代表整体的对象所共享,而不一定会随着某个代表整体的对象被销毁或破坏而被销毁或破坏;</p>',11)]))}const d=a(r,[["render",p],["__file","对象间的关系.html.vue"]]),h=JSON.parse('{"path":"/doc/Java/JavaSE/object/%E5%AF%B9%E8%B1%A1%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.html","title":"對象閒的關係","lang":"zh-CN","frontmatter":{"description":"對象閒的關係 1 综述 在Java中对象与对象的关系总体分为四类，分别是：依赖、关联、聚合和组合。 （1）依赖(Dependency)关系是类与类之间的联接。依赖关系表示一个类依赖于另一个类的定义，一般而言，依赖关系在Java语言中体现为局域变量、方法的形参，或者对静态方法的调用。 （2）关联(Association）关系是类与类之间的联接，它使一个类...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/doc/Java/JavaSE/object/%E5%AF%B9%E8%B1%A1%E9%97%B4%E7%9A%84%E5%85%B3%E7%B3%BB.html"}],["meta",{"property":"og:title","content":"對象閒的關係"}],["meta",{"property":"og:description","content":"對象閒的關係 1 综述 在Java中对象与对象的关系总体分为四类，分别是：依赖、关联、聚合和组合。 （1）依赖(Dependency)关系是类与类之间的联接。依赖关系表示一个类依赖于另一个类的定义，一般而言，依赖关系在Java语言中体现为局域变量、方法的形参，或者对静态方法的调用。 （2）关联(Association）关系是类与类之间的联接，它使一个类..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-09-07T06:31:46.000Z"}],["meta",{"property":"article:author","content":"Cotton Eye Joe"}],["meta",{"property":"article:modified_time","content":"2024-09-07T06:31:46.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"對象閒的關係\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-09-07T06:31:46.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cotton Eye Joe\\",\\"url\\":\\"https://github.com/ToDreamr\\"}]}"]]},"headers":[],"git":{"createdTime":1725685097000,"updatedTime":1725690706000,"contributors":[{"name":"春江花朝秋月夜","email":"aruixrain@gmail.com","commits":3}]},"readingTime":{"minutes":2.56,"words":769},"filePathRelative":"doc/Java/JavaSE/object/对象间的关系.md","localizedDate":"2024年9月7日","autoDesc":true}');export{d as comp,h as data};
