import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as t,d as l,o as n}from"./app-7V2lPg4G.js";const e={};function p(a,i){return n(),t("div",null,i[0]||(i[0]=[l(`<p>比如我们要访问图书服务的生产环境代码，可以使用 http://localhost:8700/bookservice/prod/main 链接，它会显示详细信息：</p><figure><img src="https://s2.loli.net/2023/03/06/aT23EdegJwqvpLC.png" alt="image-20230306230748280" tabindex="0" loading="lazy"><figcaption>image-20230306230748280</figcaption></figure><p>也可以使用 http://localhost:8700/main/bookservice-prod.yml 链接，它仅显示配置文件原文：</p><figure><img src="https://s2.loli.net/2023/03/06/kUAMsjZaTbHiG9X.png" alt="image-20230306230755591" tabindex="0" loading="lazy"><figcaption>image-20230306230755591</figcaption></figure><p>当然，除了使用Git来保存之外，还支持一些其他的方式，详细情况请查阅官网。</p><h3 id="客户端配置" tabindex="-1"><a class="header-anchor" href="#客户端配置"><span>客户端配置</span></a></h3><p>服务端配置完成之后，我们接着来配置一下客户端，那么现在我们的服务既然需要从服务器读取配置文件，那么就需要进行一些配置，我们删除原来的<code>application.yml</code>文件（也可以保留，最后无论是远端配置还是本地配置都会被加载），改用<code>bootstrap.yml</code>（在application.yml之前加载，可以实现配置文件远程获取）：</p><div class="language-xml line-numbers-mode" data-highlighter="shiki" data-ext="xml" data-title="xml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.cloud&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-cloud-starter-config&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;org.springframework.cloud&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">groupId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">    &lt;</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;spring-cloud-starter-bootstrap&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">artifactId</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&lt;/</span><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">dependency</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">&gt;</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-yaml line-numbers-mode" data-highlighter="shiki" data-ext="yaml" data-title="yaml" style="--shiki-light:#383A42;--shiki-dark:#abb2bf;--shiki-light-bg:#FAFAFA;--shiki-dark-bg:#282c34;"><pre class="shiki shiki-themes one-light one-dark-pro vp-code"><code><span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">spring</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">  cloud</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">    config</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">:</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">    	# 名称，其实就是文件名称</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      name</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">bookservice</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      # 配置服务器的地址</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      uri</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">http://localhost:8700</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      # 环境</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      profile</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">prod</span></span>
<span class="line"><span style="--shiki-light:#A0A1A7;--shiki-dark:#7F848E;--shiki-light-font-style:italic;--shiki-dark-font-style:italic;">      # 分支</span></span>
<span class="line"><span style="--shiki-light:#E45649;--shiki-dark:#E06C75;">      label</span><span style="--shiki-light:#383A42;--shiki-dark:#ABB2BF;">: </span><span style="--shiki-light:#50A14F;--shiki-dark:#98C379;">main</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>配置完成之后，启动图书服务：</p><figure><img src="https://s2.loli.net/2023/03/06/7VaosxbqtRm5X4i.png" alt="image-20230306230806269" tabindex="0" loading="lazy"><figcaption>image-20230306230806269</figcaption></figure><p>可以看到已经从远端获取到了配置，并进行启动。</p><hr><h2 id="微服务cap原则" tabindex="-1"><a class="header-anchor" href="#微服务cap原则"><span>微服务CAP原则</span></a></h2><p>经过前面的学习，我们对SpringCloud Netflix以及SpringCloud官方整个生态下的组件认识也差不多了，入门教学就到此为止，下一章将开启真正精彩的正片部分，本章的最后我们还是来了解一些理论上的知识。</p><figure><img src="https://s2.loli.net/2023/03/06/9k6oeMZIE28T3t7.png" alt="image-20230306230815241" tabindex="0" loading="lazy"><figcaption>image-20230306230815241</figcaption></figure><blockquote><p>CAP原则又称CAP定理，指的是在一个分布式系统中，存在Consistency（一致性）、Availability（可用性）、Partition tolerance（分区容错性），三者不可同时保证，最多只能保证其中的两者。</p><p>一致性（C）：在分布式系统中的所有数据备份，在同一时刻都是同样的值（所有的节点无论何时访问都能拿到最新的值）</p><p>可用性（A）：系统中非故障节点收到的每个请求都必须得到响应（比如我们之前使用的服务降级和熔断，其实就是一种维持可用性的措施，虽然服务返回的是没有什么意义的数据，但是不至于用户的请求会被服务器忽略）</p><p>分区容错性（P）：一个分布式系统里面，节点之间组成的网络本来应该是连通的，然而可能因为一些故障（比如网络丢包等，这是很难避免的），使得有些节点之间不连通了，整个网络就分成了几块区域，数据就散布在了这些不连通的区域中（这样就可能出现某些被分区节点存放的数据访问失败，我们需要来容忍这些不可靠的情况）</p></blockquote><p>总的来说，数据存放的节点数越多，分区容忍性就越高，但是要复制更新的次数就越多，一致性就越难保证。同时为了保证一致性，更新所有节点数据所需要的时间就越长，那么可用性就会降低。</p><p>所以说，只能存在以下三种方案：</p><h3 id="ac-可用性-一致性" tabindex="-1"><a class="header-anchor" href="#ac-可用性-一致性"><span>AC 可用性+一致性</span></a></h3><p>要同时保证可用性和一致性，代表着某个节点数据更新之后，需要立即将结果通知给其他节点，并且要尽可能的快，这样才能及时响应保证可用性，这就对网络的稳定性要求非常高，但是实际情况下，网络很容易出现丢包等情况，并不是一个可靠的传输，如果需要避免这种问题，就只能将节点全部放在一起，但是这显然违背了分布式系统的概念，所以对于我们的分布式系统来说，很难接受。</p><h3 id="cp-一致性-分区容错性" tabindex="-1"><a class="header-anchor" href="#cp-一致性-分区容错性"><span>CP 一致性+分区容错性</span></a></h3><p>为了保证一致性，那么就得将某个节点的最新数据发送给其他节点，并且需要等到所有节点都得到数据才能进行响应，同时有了分区容错性，那么代表我们可以容忍网络的不可靠问题，所以就算网络出现卡顿，那么也必须等待所有节点完成数据同步，才能进行响应，因此就会导致服务在一段时间内完全失效，所以可用性是无法得到保证的。</p><h3 id="ap-可用性-分区容错性" tabindex="-1"><a class="header-anchor" href="#ap-可用性-分区容错性"><span>AP 可用性+分区容错性</span></a></h3><p>既然CP可能会导致一段时间内服务得不到任何响应，那么要保证可用性，就只能放弃节点之间数据的高度统一，也就是说可以在数据不统一的情况下，进行响应，因此就无法保证一致性了。虽然这样会导致拿不到最新的数据，但是只要数据同步操作在后台继续运行，一定能够在某一时刻完成所有节点数据的同步，那么就能实现<strong>最终一致性</strong>，所以AP实际上是最能接受的一种方案。</p><p>比如我们实现的Eureka集群，它使用的就是AP方案，Eureka各个节点都是平等的，少数节点挂掉不会影响正常节点的工作，剩余的节点依然可以提供注册和查询服务。而Eureka客户端在向某个Eureka服务端注册时如果发现连接失败，则会自动切换至其他节点。只要有一台Eureka服务器正常运行，那么就能保证服务可用**（A）<strong>，只不过查询到的信息可能不是最新的</strong>（C）**</p><p>在之后的章节，我们还会继续了解这些理论的其他实际应用。</p><p>———————————————— 版权声明：本文为柏码知识库版权所有，禁止一切未经授权的转载、发布、出售等行为，违者将被追究法律责任。 原文链接：https://www.itbaima.cn/document/35v1hbsfcdgagdnw</p>`,28)]))}const o=s(e,[["render",p],["__file","SpringCloud 1.html.vue"]]),r=JSON.parse('{"path":"/doc/%E5%88%86%E5%B8%83%E5%BC%8F/cloud/SpringCloud%201.html","title":"SpringCloud 1","lang":"zh-CN","frontmatter":{"title":"SpringCloud 1","series":["cloud"],"series_order":1,"description":"image-20230306225143443image-20230306225143443 微服务基础 注意： 此阶段学习推荐的电脑配置，至少配备4核心CPU（主频3.0Ghz以上）+16GB内存，否则卡到你怀疑人生。 前面我们讲解了SpringBoot框架，通过使用SpringBoot框架，我们的项目开发速度可以说是得到了质的提升。同时，我们对于项...","head":[["meta",{"property":"og:url","content":"https://vuepress-theme-hope-docs-demo.netlify.app/doc/%E5%88%86%E5%B8%83%E5%BC%8F/cloud/SpringCloud%201.html"}],["meta",{"property":"og:title","content":"SpringCloud 1"}],["meta",{"property":"og:description","content":"image-20230306225143443image-20230306225143443 微服务基础 注意： 此阶段学习推荐的电脑配置，至少配备4核心CPU（主频3.0Ghz以上）+16GB内存，否则卡到你怀疑人生。 前面我们讲解了SpringBoot框架，通过使用SpringBoot框架，我们的项目开发速度可以说是得到了质的提升。同时，我们对于项..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:image","content":"https://s2.loli.net/2023/03/06/XeofrwYMN5GQnlC.png"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"article:author","content":"Cotton Eye Joe"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"SpringCloud 1\\",\\"image\\":[\\"https://s2.loli.net/2023/03/06/XeofrwYMN5GQnlC.png\\",\\"https://s2.loli.net/2023/03/06/dk931jubHw6KifZ.png\\",\\"https://s2.loli.net/2023/03/06/xSAhFqJUfmoa1Pv.png\\",\\"https://s2.loli.net/2023/03/06/1ulvL5q4PpbcoGD.png\\",\\"https://s2.loli.net/2023/03/06/8qH2jhtfvacbXMw.png\\",\\"https://s2.loli.net/2023/03/06/DobOruSEf3PKYyI.png\\",\\"https://s2.loli.net/2023/03/06/mFvb6c34pILHfn7.png\\",\\"https://s2.loli.net/2023/03/06/fo4FYOqe3vxSAZc.png\\",\\"https://s2.loli.net/2023/03/06/gf4iAMnUwvjR2WX.png\\",\\"https://s2.loli.net/2023/03/06/C1jah7NwT4GgJdX.png\\",\\"https://s2.loli.net/2023/03/06/E9x27lSeOfMhrHt.png\\",\\"https://s2.loli.net/2023/03/06/nM4ld9jyKzVT3Y5.png\\",\\"https://s2.loli.net/2023/03/06/YewLSsGbTj8aykE.png\\",\\"https://s2.loli.net/2023/03/06/KcRX57MGWVLlNqT.png\\",\\"https://s2.loli.net/2023/03/06/cgdON43mxRDk9Hv.png\\",\\"https://s2.loli.net/2023/03/06/XjmGn3DbqVKk6Cd.png\\",\\"https://s2.loli.net/2023/03/06/ac76NjHY5byeknP.png\\",\\"https://s2.loli.net/2023/03/06/SC9MUQxdzPmcZij.png\\",\\"https://s2.loli.net/2023/03/06/x9ZOvniJcSp5Cf7.png\\",\\"https://s2.loli.net/2023/03/06/T3zKfpqmYkD9VxI.png\\",\\"https://s2.loli.net/2023/03/06/jBtM2k7CFZsu4cU.png\\",\\"https://s2.loli.net/2023/03/06/QbfRFayHmqpLVdE.png\\",\\"https://s2.loli.net/2023/03/06/OPw5XMghApNrWKe.png\\",\\"https://s2.loli.net/2023/03/06/A2mxhZ5jBkPrOdc.png\\",\\"https://s2.loli.net/2023/03/06/4S9e3gN6ZFTuPbU.png\\",\\"https://s2.loli.net/2023/03/06/rXnWBA1zo4OlUSt.png\\",\\"https://s2.loli.net/2023/03/06/1o8pmzBXCtixhKu.png\\",\\"https://s2.loli.net/2023/03/06/gkenG9bT4aMIUio.png\\",\\"https://s2.loli.net/2023/03/06/1SHLTwmIK4ChdaD.png\\",\\"https://s2.loli.net/2023/03/06/ZzmGK4CuSwLVhva.png\\",\\"https://s2.loli.net/2023/03/06/9lPAbiYntQDGNzy.png\\",\\"https://s2.loli.net/2023/03/06/eXGS3wdvL4RAys6.png\\",\\"https://s2.loli.net/2023/03/06/BlRf7T5iVMksb1J.png\\",\\"https://s2.loli.net/2023/03/06/hysYFAeoLrnRWdX.png\\",\\"https://s2.loli.net/2023/03/06/nDpXICZHc4L5EQm.png\\",\\"https://s2.loli.net/2023/03/06/21izKlaCO9oNuYq.png\\",\\"https://s2.loli.net/2023/03/06/aGdiPjeRIOfHo7p.png\\",\\"https://s2.loli.net/2023/03/06/WYhxpSvsFU8tVcR.png\\",\\"https://s2.loli.net/2023/03/06/fbGgz2dRq43DM8O.png\\",\\"https://s2.loli.net/2023/03/06/nmD6H1BZbr7LYWC.png\\",\\"https://s2.loli.net/2023/03/06/GDd5BVMTY1t4oQj.png\\",\\"https://s2.loli.net/2023/03/06/8fdxB1PlqVYDRLr.png\\",\\"https://s2.loli.net/2023/03/06/Qri3UYvIJ7M5KAn.png\\",\\"https://s2.loli.net/2023/03/06/9tBwL1aVHT4MzmI.png\\",\\"https://s2.loli.net/2023/03/06/zQnj7bcygYJNP1s.png\\",\\"https://s2.loli.net/2023/03/06/k7p5xmoALuwU82s.png\\",\\"https://s2.loli.net/2023/03/06/KJMa6Ehp8k5SfIy.png\\",\\"https://s2.loli.net/2023/03/06/koMOYnxtq8UPiac.png\\",\\"https://s2.loli.net/2023/03/06/GiBa7FzQsvkIpdS.png\\",\\"https://s2.loli.net/2023/03/06/V5fhk2xLo8bXmWA.png\\",\\"https://s2.loli.net/2023/03/06/dUvO3K8oWMZSVHr.png\\",\\"https://s2.loli.net/2023/03/06/dDMylZ5ejKoxAVF.png\\",\\"https://s2.loli.net/2023/03/06/dRqf87xMFgsO4hL.png\\",\\"https://s2.loli.net/2023/03/06/x6Qy3SbkVLYRD4P.png\\",\\"https://s2.loli.net/2023/03/06/TLtsu51w6jlNnzJ.png\\",\\"https://s2.loli.net/2023/03/06/ZtQ4nz8hPvHBIRC.png\\",\\"https://s2.loli.net/2023/03/06/E6z2t5ZqxlKAjSB.png\\",\\"https://s2.loli.net/2023/03/06/3oiHLFWO9jVpswK.png\\",\\"https://s2.loli.net/2023/03/06/bieclsNmpqOrdHB.png\\",\\"https://s2.loli.net/2023/03/06/3dn7AlkYGJCmUxw.png\\",\\"https://s2.loli.net/2023/03/06/a8XmyswEbW1TrtA.png\\",\\"https://s2.loli.net/2023/03/06/5rbCxLtR1e8DZAu.png\\",\\"https://s2.loli.net/2023/03/06/iRT6cva5jfd7JSK.png\\",\\"https://s2.loli.net/2023/03/06/evLyDl8gVxboiap.png\\",\\"https://s2.loli.net/2023/03/06/UtcOjEfdnMGQ7ge.png\\",\\"https://s2.loli.net/2023/03/06/97by1FDirquwtv2.png\\",\\"https://s2.loli.net/2023/03/06/mrVf1qSsDXioIBc.png\\",\\"https://s2.loli.net/2023/03/06/YF5VbcRAz8ZG6nJ.png\\",\\"https://s2.loli.net/2023/03/06/gMwst5OGfvPCTd8.png\\",\\"https://s2.loli.net/2023/03/06/4puUrkIMBlx3emn.png\\",\\"https://s2.loli.net/2023/03/06/IuoAzPmXnYHSDv3.png\\",\\"https://s2.loli.net/2023/03/06/vOl9w4apbQSVAWH.png\\",\\"https://s2.loli.net/2023/03/06/y8KA1UR6tFMj5ch.png\\",\\"https://s2.loli.net/2023/03/06/oUf2VFXmrQHiz6C.png\\",\\"https://s2.loli.net/2023/03/06/x3YjDRZfqBQ1TSC.png\\",\\"https://s2.loli.net/2023/03/06/P8ZFIuNardMKvQB.png\\",\\"https://s2.loli.net/2023/03/06/bkd3BCsDxvYNPoX.png\\",\\"https://s2.loli.net/2023/03/06/Pe3bs6OVMgjR7iu.png\\",\\"https://s2.loli.net/2023/03/06/9TdormfJkgK258q.png\\",\\"https://s2.loli.net/2023/03/06/EIFUo5rVvd4Nc3C.png\\",\\"https://s2.loli.net/2023/03/06/3AO4XzashuPwlRI.png\\",\\"https://s2.loli.net/2023/03/06/aT23EdegJwqvpLC.png\\",\\"https://s2.loli.net/2023/03/06/kUAMsjZaTbHiG9X.png\\",\\"https://s2.loli.net/2023/03/06/7VaosxbqtRm5X4i.png\\",\\"https://s2.loli.net/2023/03/06/9k6oeMZIE28T3t7.png\\"],\\"dateModified\\":null,\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Cotton Eye Joe\\",\\"url\\":\\"https://github.com/ToDreamr\\"}]}"]]},"headers":[{"level":2,"title":"传统项目转型","slug":"传统项目转型","link":"#传统项目转型","children":[]},{"level":2,"title":"走进SpringCloud","slug":"走进springcloud","link":"#走进springcloud","children":[]},{"level":2,"title":"Eureka 注册中心","slug":"eureka-注册中心","link":"#eureka-注册中心","children":[{"level":3,"title":"微服务项目结构","slug":"微服务项目结构","link":"#微服务项目结构","children":[]},{"level":3,"title":"服务间调用","slug":"服务间调用","link":"#服务间调用","children":[]},{"level":3,"title":"服务注册与发现","slug":"服务注册与发现","link":"#服务注册与发现","children":[]},{"level":3,"title":"注册中心高可用","slug":"注册中心高可用","link":"#注册中心高可用","children":[]}]},{"level":2,"title":"LoadBalancer 负载均衡","slug":"loadbalancer-负载均衡","link":"#loadbalancer-负载均衡","children":[{"level":3,"title":"负载均衡","slug":"负载均衡","link":"#负载均衡","children":[]},{"level":3,"title":"自定义负载均衡策略","slug":"自定义负载均衡策略","link":"#自定义负载均衡策略","children":[]},{"level":3,"title":"OpenFeign实现负载均衡","slug":"openfeign实现负载均衡","link":"#openfeign实现负载均衡","children":[]}]},{"level":2,"title":"Hystrix 服务熔断","slug":"hystrix-服务熔断","link":"#hystrix-服务熔断","children":[{"level":3,"title":"服务降级","slug":"服务降级","link":"#服务降级","children":[]},{"level":3,"title":"服务熔断","slug":"服务熔断","link":"#服务熔断","children":[]},{"level":3,"title":"OpenFeign实现降级","slug":"openfeign实现降级","link":"#openfeign实现降级","children":[]},{"level":3,"title":"监控页面部署","slug":"监控页面部署","link":"#监控页面部署","children":[]}]},{"level":2,"title":"Gateway 路由网关","slug":"gateway-路由网关","link":"#gateway-路由网关","children":[{"level":3,"title":"部署网关","slug":"部署网关","link":"#部署网关","children":[]},{"level":3,"title":"路由过滤器","slug":"路由过滤器","link":"#路由过滤器","children":[]}]},{"level":2,"title":"Config 配置中心","slug":"config-配置中心","link":"#config-配置中心","children":[{"level":3,"title":"部署配置中心","slug":"部署配置中心","link":"#部署配置中心","children":[]},{"level":3,"title":"客户端配置","slug":"客户端配置","link":"#客户端配置","children":[]}]},{"level":2,"title":"微服务CAP原则","slug":"微服务cap原则","link":"#微服务cap原则","children":[{"level":3,"title":"AC 可用性+一致性","slug":"ac-可用性-一致性","link":"#ac-可用性-一致性","children":[]},{"level":3,"title":"CP 一致性+分区容错性","slug":"cp-一致性-分区容错性","link":"#cp-一致性-分区容错性","children":[]},{"level":3,"title":"AP 可用性+分区容错性","slug":"ap-可用性-分区容错性","link":"#ap-可用性-分区容错性","children":[]}]}],"git":{"createdTime":null,"updatedTime":null,"contributors":[]},"readingTime":{"minutes":49.05,"words":14715},"filePathRelative":"doc/分布式/cloud/SpringCloud 1.md","autoDesc":true}');export{o as comp,r as data};
